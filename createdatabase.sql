-- Creates the Room Table 
CREATE TABLE ROOM(
    ROOM_ID     VARCHAR(10)     NOT NULL    UNIQUE,
    PRIMARY KEY(ROOM_ID));

-- Creates the Player Table with the foreign key dependence to the Room
CREATE TABLE PLAYER(
    PLAYER_ID    VARCHAR(10)    NOT NULL   UNIQUE,
    TITLE       VARCHAR(15)     NOT NULL,
    AGE     INTEGER             NOT NULL,
    HEALTH  INTEGER             NOT NULL, CONSTRAINT HEALTH_Ck CHECK(HEALTH BETWEEN 1 AND 100),
    CLASS   VARCHAR(15)         NOT NULL,
    ROLE    VARCHAR(15)         NOT NULL,
    ATTACK_TARGET   VARCHAR(10)     UNIQUE,
    ROOM_ID VARCHAR(10)         NOT NULL    UNIQUE,
    PRIMARY KEY(PLAYER_ID),
    FOREIGN KEY(ROOM_ID) REFERENCES ROOM(ROOM_ID));

-- Creates the Boss Table with the foreign key dependence to the Room
CREATE TABLE BOSS(
    BOSS_ID VARCHAR(10) NOT NULL    UNIQUE,
    NAME    VARCHAR(15) NOT NULL,
    HEALTH  INTEGER NOT NULL, CONSTRAINT HEALTH_Ck CHECK (HEALTH BETWEEN 0 AND 100),
    DAMAGE  INTEGER NOT NULL, CONSTRAINT DAMAGE_Ck CHECK (DAMAGE BETWEEN 0 AND 100),
    DIFFICULTY  INTEGER NOT NULL, CONSTRAINT DIFFICULTY_Ck CHECK(DIFFICULTY BETWEEN 1 AND 10),
    ROOM_ID     VARCHAR(10)     NOT NULL    UNIQUE,
    PRIMARY KEY(BOSS_ID),
    FOREIGN KEY(ROOM_ID) REFERENCES ROOM(ROOM_ID));

CREATE TABLE MONSTER(
    MONSTER_ID  VARCHAR(10) NOT NULL    UNIQUE,
    CNAME   VARCHAR(30) NOT NULL,
    HEALTH  INTEGER     NOT NULL, CONSTRAINT HEALTH_Ck CHECK (HEALTH BETWEEN 0 AND 100),
    CLASS   VARCHAR(20) NOT NULL,
    DIFFICULTY  INTEGER NOT NULL, CONSTRAINT DIFFICULTY_Ck CHECK (DIFFICULTY BETWEEN 1 AND 10),
    QUANTITY INTEGER NOT NULL,
    ROOM_ID VARCHAR(10) NOT NULL UNIQUE,
    PRIMARY KEY(MONSTER_ID),
    FOREIGN KEY(ROOM_ID) REFERENCES ROOM(ROOM_ID));
